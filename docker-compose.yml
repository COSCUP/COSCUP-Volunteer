version: "3.9"

networks:
  backend:
    driver: bridge

services:
  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - $PWD/logs/nginx:/var/log/nginx
      - $PWD/logs/apps:/var/log/apps
      - $PWD/nginx/sites:/etc/nginx/sites-available
      - $PWD/docs_dev/site:/var/www/docs_site/docs/
    depends_on:
      - webapp
      - apiapp
    networks:
      - backend

  workerapp:
    image: "coscupweb-base:24.04.25"
    links:
      - "memcached-prod:memcached"
      - "queue_sender:rabbitmq"
      - "secretary_mongo:mongo"
    volumes:
      - $PWD/logs/apps:/var/log/apps
      - $PWD/scripts:/app/scripts
      - $PWD/main.py:/app/main.py
      - $PWD/uwsgi.ini:/app/uwsgi.ini
      - $PWD/setting.py:/app/setting.py
      - $PWD/cmdtools:/app/cmdtools
      - $PWD/celery_task:/app/celery_task
      - $PWD/models:/app/models
      - $PWD/module:/app/module
      - $PWD/templates:/app/templates
      - $PWD/view:/app/view
      - $PWD/structs:/app/structs
      - $PWD/api:/app/api
      - $PWD/docs_dev:/app/docs_dev
    depends_on:
      - memcached-prod
      - queue_sender
      - secretary_mongo
    networks:
      - backend
    environment:
      - PYTHONPATH=/app
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    command: sh

  cmdapp:
    image: "coscupweb-base:24.04.25"
    links:
      - "memcached-prod:memcached"
      - "queue_sender:rabbitmq"
      - "secretary_mongo:mongo"
    volumes:
      - $PWD/logs/apps:/var/log/apps
      - $PWD/main.py:/app/main.py
      - $PWD/uwsgi.ini:/app/uwsgi.ini
      - $PWD/setting.py:/app/setting.py
      - $PWD/cmdtools:/app/cmdtools
      - $PWD/celery_task:/app/celery_task
      - $PWD/models:/app/models
      - $PWD/module:/app/module
      - $PWD/templates:/app/templates
      - $PWD/view:/app/view
      - $PWD/structs:/app/structs
      - $PWD/api:/app/api
      - $PWD/docs_dev:/app/docs_dev
    depends_on:
      - memcached-prod
      - queue_sender
      - secretary_mongo
    environment:
      - PYTHONPATH=/app
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    networks:
      - backend
    entrypoint: ["poetry", "run", "python3", "cmdtools/main.py"]

  webapp:
    image: "coscupweb-base:24.04.25"
    links:
      - "memcached-prod:memcached"
      - "queue_sender:rabbitmq"
      - "secretary_mongo:mongo"
    ports:
      - "5000:5000"
    volumes:
      - $PWD/logs/apps:/var/log/apps
      - $PWD/main.py:/app/main.py
      - $PWD/uwsgi.ini:/app/uwsgi.ini
      - $PWD/setting.py:/app/setting.py
      - $PWD/cmdtools:/app/cmdtools
      - $PWD/celery_task:/app/celery_task
      - $PWD/models:/app/models
      - $PWD/module:/app/module
      - $PWD/templates:/app/templates
      - $PWD/view:/app/view
      - $PWD/static:/app/static
      - $PWD/structs:/app/structs
    depends_on:
      - memcached-prod
      - queue_sender
      - secretary_mongo
    environment:
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    expose:
      - "5000"
    deploy:
      replicas: 1
    networks:
      - backend
    entrypoint:
      [
        "poetry",
        "run",
        "flask",
        "--app",
        "main:app",
        "run",
        "--host",
        "0.0.0.0",
        "--debug",
      ]

  apiapp:
    image: "coscupweb-base:24.04.25"
    links:
      - "memcached-prod:memcached"
      - "queue_sender:rabbitmq"
      - "secretary_mongo:mongo"
    volumes:
      - $PWD/logs/apps:/var/log/apps
      - $PWD/main.py:/app/main.py
      - $PWD/uwsgi.ini:/app/uwsgi.ini
      - $PWD/setting.py:/app/setting.py
      - $PWD/cmdtools:/app/cmdtools
      - $PWD/celery_task:/app/celery_task
      - $PWD/models:/app/models
      - $PWD/module:/app/module
      - $PWD/templates:/app/templates
      - $PWD/view:/app/view
      - $PWD/structs:/app/structs
      - $PWD/api:/app/api
    depends_on:
      - memcached-prod
      - queue_sender
      - secretary_mongo
    expose:
      - "8000"
    deploy:
      replicas: 1
    environment:
      - UVICORN_HOST=0.0.0.0
      - UVICORN_WORKERS=2
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    networks:
      - backend
    entrypoint: ["poetry", "run", "uvicorn", "api.main:app", "--reload"]

  celery_worker:
    image: "coscupweb-base:24.04.25"
    links:
      - "queue_sender:rabbitmq"
      - "secretary_mongo:mongo"
    volumes:
      - $PWD/logs/workers:/var/log/workers
      - $PWD/main.py:/app/main.py
      - $PWD/uwsgi.ini:/app/uwsgi.ini
      - $PWD/setting.py:/app/setting.py
      - $PWD/cmdtools:/app/cmdtools
      - $PWD/celery_task:/app/celery_task
      - $PWD/models:/app/models
      - $PWD/module:/app/module
      - $PWD/templates:/app/templates
      - $PWD/view:/app/view
      - $PWD/structs:/app/structs
    depends_on:
      - memcached-prod
      - queue_sender
      - secretary_mongo
    environment:
      - C_FORCE_ROOT=true
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    networks:
      - backend
    entrypoint:
      [
        "poetry",
        "run",
        "celery",
        "-A",
        "celery_task.celery_main",
        "worker",
        "-B",
        "-l",
        "info",
        "-O",
        "fair",
        "-c",
        "4",
        "--logfile",
        "/var/log/workers/log.log",
      ]

  docs:
    image: "coscupweb-base:24.04.25"
    links:
      - "memcached-prod:memcached"
      - "queue_sender:rabbitmq"
      - "secretary_mongo:mongo"
    volumes:
      - $PWD/logs/apps:/var/log/apps
      - $PWD/main.py:/app/main.py
      - $PWD/uwsgi.ini:/app/uwsgi.ini
      - $PWD/setting.py:/app/setting.py
      - $PWD/cmdtools:/app/cmdtools
      - $PWD/celery_task:/app/celery_task
      - $PWD/models:/app/models
      - $PWD/module:/app/module
      - $PWD/templates:/app/templates
      - $PWD/view:/app/view
      - $PWD/structs:/app/structs
      - $PWD/api:/app/api
      - $PWD/docs_dev:/app/docs_dev
    depends_on:
      - memcached-prod
      - queue_sender
      - secretary_mongo
    expose:
      - "80"
    deploy:
      replicas: 1
    environment:
      - PYTHONPATH=../
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
    networks:
      - backend
    working_dir: /app/docs_dev
    entrypoint: ["./entrypoint.sh", "poetry", "run", "mkdocs", "build"]

  memcached-prod:
    image: "memcached:1.6.22-alpine"
    deploy:
      replicas: 1
    networks:
      - backend

  queue_sender:
    image: "rabbitmq:3.11.27-management-alpine"
    deploy:
      replicas: 1
    depends_on:
      - secretary_mongo
    networks:
      - backend
    volumes:
      - rabbitdata:/var/lib/rabbitmq

  secretary_mongo:
    image: "mongo:6.0.12-jammy"
    deploy:
      replicas: 1
    volumes:
      - mongodata:/data
      - mongodb:/data/db
      - mongoconfig:/data/configdb
    networks:
      - backend

  link_mongo:
    image: "mongo:6.0.12-jammy"
    deploy:
      replicas: 1
    volumes:
      - linkmongodb:/data/db
      - linkmongoconfig:/data/configdb
    networks:
      - backend
    entrypoint: ["mongosh", "secretary_mongo:27017"]

volumes:
  mongodata: {}
  mongodb: {}
  mongoconfig: {}
  linkmongodb: {}
  linkmongoconfig: {}
  rabbitdata: {}
