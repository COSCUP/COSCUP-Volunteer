name: Pytest

on:
  push:
  workflow_dispatch:

jobs:
  run_test:
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'ubuntu-22.04']
        python-version: ['3.10', '3.11']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install memcached libs
        run: sudo apt-get install ca-certificates libmemcached-dev
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Poetry venv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: poetry-venv-${{ matrix.python-version }}${{ hashFiles('**/poetry.lock') }}
      - name: Cache Poetry local
        uses: actions/cache@v3
        with:
          path: ~/.local/share/pypoetry
          key: poetry-local-${{ matrix.python-version }}${{ hashFiles('**/poetry.lock') }}
      - name: Cache Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ matrix.python-version }}${{ hashFiles('**/poetry.lock') }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Install dependencies
        run: poetry install
      - name: Create setting.py
        run: mv setting_sample.py setting.py
      - name: Run mypy
        run: PYTHONPATH=./ poetry run mypy ./view/ ./module/ ./models/ ./celery_task/ ./structs/ ./api/ ./main.py
      - name: Run Testing
        run: PYTHONPATH=./ poetry run pytest -vv --cov-report=term-missing --cov ./
      - name: Run Pylint
        run: PYTHONPATH=./ poetry run pylint --disable=R0801 ./view/ ./module/ ./models/ ./celery_task/ ./structs/ ./api/ ./main.py
